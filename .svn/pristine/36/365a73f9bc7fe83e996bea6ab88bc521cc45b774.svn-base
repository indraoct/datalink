<?php

class InventoryController extends BaseController 
{
	protected $_defaultModel = 'InventoryModel';
	protected $_pageTitle = 'View Stock';
	protected $_menuId = 'view_stock';
    
	public function __construct()
	{
        
        }
        
        public function index(){
            
            $listWarehouse 	= GeneralModel::getSelectionList('m_warehouse','id_warehouse','warehouse_name');
            $report = "View Report";
            
       
            /*
             * Export
             */
            
            $tableHeader = array(
                                    array(
                                                             'data' => 'no',
                                                             'label' => '#',
                                                             'width' => '5%',
                                                     ),
                                     array(
                                                             'data' => 'item_code',
                                                             'width' => '7%',
                                                             'label' => 'Item Code',
                                                     ),
                                     array(
                                                             'data' => 'item_name',
                                                             'width' => '20%',
                                                             'label' => 'Item Name',
                                                     ),
                                     array(
                                                             'data' => 'qty',
                                                             'label' => 'Qty',
                                                             'className' => 'alignRight',
                                                     ),
                                     array(
                                                             'data' => 'min_stock',
                                                             'label' => 'Min',
                                                             'className' => 'alignRight',
                                                     ),
                                     array(
                                                             'data' => 'max_stock',
                                                             'label' => 'Max',
                                                             'className' => 'alignRight',
                                                     ),
                                     array(
                                                             'data' => 'action',
                                                             'label' => 'Action',
                                                             'width' => '10%',
                                                             'bSortable' => 'false',
                                                             'className' => 'alignCenter',
                                                     ),);
            
                 $param = array(
							'title'			=> $this->_pageTitle,
							'title_desc'	=> 'Inventory',
							'menu_id'		=> $this->_menuId,
                                                        'listWarehouse' => array('' => '-- Please Select --') + $listWarehouse,
                                                        'report'   => $report,
                                                        'tableHeader'			=> $tableHeader,
						);
            
//            if (Request::isMethod('post'))
//		{
//			$allParams = Input::all();
//			$export = isset($allParams['export']) ? $allParams['export'] : null;
//			$exportHeader = simpleArray($tableHeader,'label');
//			array_pop($exportHeader);
//
//			if( $export == 'xls' || $export == 'csv' )
//			{
//				$data[] = $exportHeader;
//				$data 	= array_merge($data,$this->getData());
//
//				Excel::create('Inventory'.$allParams['report'], function($excel) use($data) {
//					$excel->sheet('Sheetname', function($sheet) use($data) {
//						$sheet->fromArray($data);
//					});
//				})->export($export);
//			}
//			else if( $export == 'pdf' )
//			{
//				$data 	= $this->getData();
//				$exportHeader = simpleArray($tableHeader,'label');
//				array_pop($exportHeader);
//				$paramPdf['tableHeader'] = $exportHeader;
//				$paramPdf['data'] = $data;
//
//				$destination = public_path().'/';
//				$fileName = 'SalesReport'.$allParams['report'].'.pdf';
//				$pdf = App::make('dompdf');
//				$pdf->loadView('pdf.datatable',$paramPdf)
//						->save($destination.$fileName);
//				header('Content-Description: File Transfer');
//				header('Content-Type: application/octet-stream');
//				header('Content-Disposition: attachment; filename="'.$fileName.'"');
//				header('Content-Transfer-Encoding: binary');
//				header('Expires: 0');
//				header('Cache-Control: must-revalidate');
//				header('Pragma: public');
//				header('Content-Length: ' . filesize($destination.$fileName));
//
//				readfile($destination.$fileName);
//	    		@unlink($destination.$fileName);
//			}
//		}
            
            
            
            return View::make('modules.inventory.index',$param);
        }
        
        public function getData(){
            
            if(Request::ajax()){
			$privi['edit'] = hasPrivilege($this->_menuId,'edit');
			$privi['delete'] = hasPrivilege($this->_menuId,'delete');
		
			$param = Input::all();
			
			$iDisplayLength = intval($param['length']);
			$limit = $iDisplayLength < 0 ? $iTotalRecords : $iDisplayLength; 
			$offset = intval($param['start']);
			$draw = intval($param['draw']);
			$sortBy = $param['order'][0]['column'];
			$sortDir = $param['order'][0]['dir'];
			$filter = isset($param['filter']) ? $param['filter'] : array();
			
			$model = new $this->_defaultModel;
			$get = $model->getData($filter, $limit, $offset, $sortBy, $sortDir);
			
			$data = array();
			$n = $offset + 1;
			foreach($get['data'] as $key=>$r)
			{
				$row = $r;
				
				$row->id = $r->$get['id'];
				unset($row->$get['id']);
                                
                                $row->item_name_link = '<a href="'.URL::to('/').'/inventory/data/card/'.encode($row->id).'" class="show_detail">'.$r->item_name.'</a> ';
				
                                $row->qty = displayNumeric($r->qty);
                                $row->min_stock = displayNumeric($r->min_stock);
                                $row->max_stock = displayNumeric($r->max_stock);
                                
				$hapus = '';
				if($privi['delete'])
					$hapus = '<a href="javascript:;" class="btn btn-xs red tooltips do_delete" data-original-title="Hapus"><i class="fa fa-trash-o"></i></a> ';
				
				$row->action = '<div>'.$hapus.'</div>';
				$row->no = $n;
				
				$data[$key] = $row;
				
				$n++;
			}
			
			$records["data"] = $get['data'];
			$records["draw"] = $draw;
			$records["recordsTotal"] = $get['count'];
			$records["recordsFiltered"] = $get['filter_count'];;
			
			echo json_encode($records);
		
		}
            
        }
        
        
        public function showInventoryCard($id_stock){
            
            $id_stock = decode($id_stock);
            
            $model = new $this->_defaultModel;
		$getDetail = $model->getDetail($id_stock);

		if(!$getDetail)
		{
			$param = array(
								'title'			=> 'Page 404',
								'menu_id'		=> 'missing'
							);
			return Response::view('errors.missing_admin', $param, 404);
		} 
		$listWarehouse 	= GeneralModel::getSelectionList('m_warehouse','id_warehouse','warehouse_name');
		
                
                
                $param = array(
						'title'					=> 'Stock Card',
						'title_desc'		=> '',
						'menu_id'		=> $this->_menuId,
                                                'listWarehouse'	=> array('' => '-- Please Select --') + $listWarehouse,
                                                'inventory' => $getDetail['inventory'],
					);
                
                
		return View::make('modules.inventory.card',$param);
             
             
            
        }
        
        public function getDataInventoryCard (){
            if(Request::ajax()){
			$privi['edit'] = hasPrivilege($this->_menuId,'edit');
			$privi['delete'] = hasPrivilege($this->_menuId,'delete');
		
			$param = Input::all();
			
			$iDisplayLength = intval($param['length']);
			$limit = $iDisplayLength < 0 ? $iTotalRecords : $iDisplayLength; 
			$offset = intval($param['start']);
			$draw = intval($param['draw']);
			$sortBy = $param['order'][0]['column'];
			$sortDir = $param['order'][0]['dir'];
			$filter = isset($param['filter']) ? $param['filter'] : array();
			
			$model = new $this->_defaultModel;
			$get = $model->getDataStock($filter, $limit, $offset, $sortBy, $sortDir);
			
			$data = array();
			$n = $offset + 1;
			foreach($get['data'] as $key=>$r)
			{
				$row = $r;
				
				$row->id = $r->$get['id'];
				unset($row->$get['id']);
                               
			
				$row->no = $n;
                                $row->trx_date = displayDate($r->trx_date);
                                $row->capital_price = displayNumeric($r->capital_price);
                                $row->stock_in = displayNumeric($r->stock_in);
                                $row->stock_out = displayNumeric($r->stock_out);
                                $row->remaining_stock = displayNumeric($r->remaining_stock);
                                $row->balance = displayNumeric($r->balance);

				
				$data[$key] = $row;
				
				$n++;
			}
			
			$records["data"] = $get['data'];
			$records["draw"] = $draw;
			$records["recordsTotal"] = $get['count'];
			$records["recordsFiltered"] = $get['filter_count'];;
		
                       
			echo json_encode($records);
            
            }
        }
        
          public function getDataTambahan(){
            
            if(Request::ajax()){
                $id_item = $_POST['id_item'];
                $id_warehouse = $_POST['id_warehouse'];
                $model = new $this->_defaultModel;
                
                $get = $model->getDataTambahan($id_item,$id_warehouse);
                $row = new stdClass();
                $row->stock_initial = $row->stock_in = $row->stock_out = $row->remaining_stock = $row->balance = 0;
                foreach ($get['tambahan'] as $r=>$key){
                    
                    $row->stock_initial += $key->stock_initial;
                    $row->stock_in += $key->stock_in;
                    $row->stock_out += $key->stock_out;
                    $row->remaining_stock += ($key->stock_initial + $key->stock_in - $key->stock_out);
                    $row->balance += (($key->stock_initial + $key->stock_in - $key->stock_out) * $key->cogs_price);
                    
                }
   
                    $row->stock_initial = displayNumeric($row->stock_initial);
                    $row->stock_in = displayNumeric($row->stock_in);
                    $row->stock_out = displayNumeric($row->stock_out);
                    $row->remaining_stock = displayNumeric($row->remaining_stock);
                    $row->balance = displayNumeric($row->balance);
                    
                
                echo json_encode($row);
            }
           
        }
}   